

Title: Sched
Purpose: Schedule appointments between a user's various customers and their contacts.
Author: David Gamell Jr.
Contact: dgamell@my.wgu.edu
Version: 1.0
Date: 9/13/2022

IDE: IntelliJ IDEA 2022.2.1 (Ultimate Edition)
JDK: Java 17.0.4.1
JavaFX: javafx-sdk-18.0.2
MySQL: mysql-connector-java-8.0.25


Below are directions on how to satisfy each requirement in the rubric:


Req. A: 

	- IntelliJ instructions before running the application:

	- Before running, ensure the SDK is set to Java 17, and make sure to import the above JavaFx and MySQL drivers in the libraries section of the "project structure" dialog box (ctrl+alt+shift+s). Also go to Run -> Edit Configurations and click the + to add "Application" (if one is not already there). From here, in the "Main class" field, change it to "Main.Main" (without quotes). Then, click "Modify options" on the right and select "Add VM Options". Insert the following text there: --module-path ${PATH_TO_FX} --add-modules javafx.fxml,javafx.controls,javafx.graphics

	- If you have not already set {PATH_TO_FX} in your IDE, go to File -> Settings -> Appearance & Behavior -> Path Variables, and from here add a new variable named "PATH_TO_FX" and then set the value to the location of your JavaFX lib folder on your computer. These are all steps given to me by WGU to achieve a working IDE environment.

	- Click the run button.

	- A message will be printed in the console to inform if a JDBC connection to the MySQL database was successful or not. If it was not successful, please make sure your database is running from your local machine (127.0.0.1) at port 3306, and that the username/password for it is sqlUser/Passw0rd!



Req. A1: 

	- At the login screen, attempt to enter an incorrect username or password. It will give you an error message. (Req. D)

	- Change your computer's Locale to fr_FR in order to see the text turn to french. Or you can press the "French?" button to test the same effect.

	- Login with username/password of test/test or admin/admin to access the next stage.

	- A confirmation dialog will inform you if you have an appointment in the next fifteen minutes or not.



Req. A2:

	- You are presented with three tabs at the top left: Appointments, Customers, Reports. Click these to go to their respective portions.

	- Click on the Customers tab. You are presented with a table of all customers stored in the MySQL database.

	- You can add new customers by filling out the fields on the right and clicking the Add button. The new customer will be added to the table and added to the MySQL database. The new Customer_ID generated by the database will be retrieved and used for the new customer's ID. The Add button will change to Update if you wish to edit the information and resubmit.

	- If you select an existing customer in the table, the fields will populate with that customer's information, and the Add button will change to Update. You can change any fields and click Update, and those changes will be updated in the table and updated in the MySQL database.

	- The Country combo box has options taken from the database. Selecting each one will change the contents of the Territory combo box to reflect the territories in that country. The ID fields will be auto-populated.

	- The Delete button will become visible if you click on an existing customer. Delete a customer. You will be presented with a confirmation listing all of their associated appointments that will be deleted as well. If you click Yes, then all of that customer's associated appointments will be deleted from the appointments table in the Appointments tab, and then from the database. After that, the customer will be deleted from the customers table, and from the database. There will be a message displayed below the delete button indication that the customer has been deleted.

	- After deletion, the Update button will change to Add, and the fields will remain populated with the deleted customer's data in case you wish to re-add them. A new customer ID will be generated by the database if you do. Click the Clear Fields button if you wish to start with a fresh slate.



Req. A3a:

	- Click on the appointments tab. This is another table and input area with the exact same functionality as the Customers tab. Add, Update, and Delete all work the same. An appointment ID will be generated by the database and retrieved for use in the application, should you choose to add new appointments.

	- If you delete an appointment, there will be a custom message above the buttons, displaying the ID and type of the appointment removed.

	- The start/end time combo boxes will reflect the time zone your computer is set at. If you attempt to use a start time outside of business hours from 8AM to 10PM EST, even if you select 8AM in your timezone outside of EST, it will give you an error and not allow you to add or update the appointment. The application must be restarted each time the timezone is changed for the combo boxes to reflect your change.

	- Contacts, Customers, and Users assigned are in combo boxes and their ID is reflected in a disabled field to the right (just like the appointment ID).



Req. A3b:

	- In the Appointments tab, there are three radio buttons on the top right reflecting Show All, Month, and Week. Click on these to change the appointments table to reflect whether you have any appointments this month or this week. These changes are based on the user that you logged in as (test or admin) specifically. All of the table columns display the same information.



Req. A3c:

	- Add or Update any appointment and take note of the start/end times in the appointments table. Now run a query in MySQL Workbench and note that the times displayed in the database are UTC, whereas the ones in the application are still in your local time zone.



Req. A3d:

	- Attempt to select a start or end time outside of business hours. I deliberately allowed the options to fall outside business hours, and you will receive an error message if you choose incorrect times. The application will also not allow you to add/update until this is corrected.

	- Attempt to add or update an appointment, and choose a customer who already has an appointment scheduled. Change your date to the same as the customer's other appointment, and then attempt to time the appointment to overlap with the existing one. Click Add or Update. You will be given an error message and the application will not add or update the appointment to the table or the database.

	- You already tested the login error requirement earlier at the login screen. These usernames and passwords are always drawn from the database to be checked for authenticity. They are not staticly set in the code.



Req. A3e:
	- Select an existing appointment and change it to today's date and change the time to within fifteen minutes of now. Click update and then exit the application and re-run it. Log in as the same user you were before and you will be presented with a confirmation dialog listing all of the appointments you have upcoming within the next fifteen minutes.



Req. A3f:

	- Click on the reports tab. To the right, you will see a table listing all month-type combinations found in the appointments table. Each row will be accompanied with a tally of how many occurrances each has. These will update every time the report tab is clicked on again.

	- There will be a large table which you can populate by clicking the combo box above and selecting a contact. The table will populate with only that contact's appointments.

	- The additional report of my choice is a list of all current and new customers and how many appointments each have scheduled, at a glance.



Req. B:

	- All in all, I used 40 lambda expressions, however they are mostly of two varieties. I made extensive use of them in my OnMouseClicked and onAction events to easily change or set styles for the various UI elements. The other usage of lambda expressions was to quickly populate string array lists of names from various tables for use in comparisons and UI elements.



Req. C:

	- In the root directory of the project will be a text file named login_activity.txt and every successful or failed login attempt is recorded here with a timestamp.



Req. D:

	- In the root directory of the project will be a javadoc folder. Access index.html to begin browsing. The lambda expressions are mentioned in the comments where they occurred. Namely in /sched/javadoc/Controllers/SchedController.html and in /sched/javadoc/Main/Contact.html etc. 



Req. E:

	- You are reading this readme file.



Req. F:

	- Thank you for your time and evaluation.

